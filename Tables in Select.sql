--Condition
--For an arbitrary SELECT command, determine the list of tables included in it
--(separated by commas) indicating the name of the scheme. Solve the problem with one SELECT command.

WITH SRC AS (
SELECT q'{
WITH "?? ?? ???" AS (
SELECT DEPARTMENT_ID,AVG(SALARY) AS ASAL
FROM HR.EMPLOYEES
GROUP BY DEPARTMENT_ID),
"???? ????" AS (
SELECT DEPARTMENT_ID, MIN(ABS(SALARY - ASAL)) AS MINSAL
FROM EMPLOYEES JOIN "?? ?? ???" USING (DEPARTMENT_ID)
GROUP BY DEPARTMENT_ID)
SELECT EMPLOYEE_ID AS "?????",LAST_NAME AS "???????",JOB_ID AS
"?????????",
DEPARTMENT_ID AS "?????",SALARY AS "?????", TRUNC(ASAL) AS "??????? ?????"
FROM EMPLOYEES JOIN JOBS USING (JOB_ID)
JOIN "?? ?? ???" USING ( DEPARTMENT_ID) JOIN "???? ????"
USING (DEPARTMENT_ID)
WHERE (DEPARTMENT_ID, ABS(SALARY - ASAL)) IN
(SELECT DEPARTMENT_ID, MINSAL FROM "???? ????")
ORDER BY DEPARTMENT_ID, SALARY, LAST_NAME;
}' STR
FROM DUAL
),
TABS AS (
SELECT REGEXP_SUBSTR(STR, '(".+?")|([[:alnum:]_.]*)',REGEXP_INSTR(STR, '(FROM|JOIN)([[:space:]])+', 1, LEVEL, 1, 'i'), 1) AS TABLE_NAME
FROM SRC
CONNECT BY LEVEL <= REGEXP_COUNT(STR, '(FROM|JOIN)([[:space:]])+', 1, 'i')
),
TABLES AS(
SELECT DISTINCT
(CASE
    WHEN TAB.TABLE_NAME LIKE '%.%' OR UPPER(TAB.TABLE_NAME) = 'DUAL'
    THEN TAB.TABLE_NAME
    WHEN SYN.SYNONYM_NAME IS NOT NULL 
        THEN (SELECT USER FROM DUAL) || '.' || SYN.TABLE_NAME
    WHEN UPPER(TRIM(BOTH '"' FROM TAB.TABLE_NAME)) IN
        (SELECT UPPER(TABLE_NAME) FROM ALL_TABLES 
        UNION
        SELECT UPPER(TABLE_NAME) FROM DICT)
        THEN(SELECT USER FROM DUAL) || '.' || TAB.TABLE_NAME
END) TABLE_NAME
FROM TABS TAB 
LEFT JOIN ALL_SYNONYMS SYN ON UPPER(TRIM(BOTH '"' FROM TAB.TABLE_NAME)) = UPPER(SYN.SYNONYM_NAME))
SELECT LISTAGG(TABLE_NAME,',') WITHIN GROUP(ORDER BY TABLE_NAME ) "???????"
FROM TABLES
WHERE TABLE_NAME IS NOT NULL;
